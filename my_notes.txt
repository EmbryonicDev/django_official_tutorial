*#*#*#*#*#*#*#*#*#*# Part 1 *#*#*#*#*#*#*#*#*#*#

* Create project through terminal:
    django-admin startproject mysite

* Verify project works on development server:
    python3 manage.py runserver

* Create new app: polls:
    python3 manage.py startapp polls

* Create first view in polls/view.py

* Create URLconf in polls directory named urls.py

* Point the root URLconf to the polls.urls
    urlpatterns += path("polls/", include("polls.urls"))


*#*#*#*#*#*#*#*#*#*# Part 2 *#*#*#*#*#*#*#*#*#*#\
** Database setup for SQLite
    mysite/settings:
        * Update TIME_ZONE -> 'CET'
        * Create tables in database before they can be used:
            - comment out or delete unnecessary apps from INSTALLED_APPS before migrating
            - To migrate:
                $ python3 manage.py migrate

** Creating models
    - add Question / Choice models to polls/models.py

** Activating models
    - Add to mysite/settings.py / INSTALLED_APPS:
        "polls.apps.PollsConfig",
    - migrate models to database:
        $ python3 manage.py makemigrations polls

    *** Optional ***
    - Run command that takes migration names and prints their SQL:
        $ python3 manage.py sqlmigrate polls 0001
    - Run command to check for problems in project: 
        $ python3 manage.py check

    - Run migrate again to create model tables in database:
        $ python3 manage.py migrate

    ** Change your models (in models.py).
    ** Run < python manage.py makemigrations ..app_name.. > to create migrations for those changes
    ** Run < python3 manage.py migrate > to apply those changes to the database

** Playing with the Django API
    - Open Python shell:
        $ python3 manage.py shell
        - follow steps: 
            https://docs.djangoproject.com/en/4.2/intro/tutorial02/
        - add __str__() to each model for a cleared representation when running: 
            Question.objects.all
        - add custom method to model Question:
            - def was_published_recently

** Django admin
    ** Create admin user
        - Run command: 
            $ python3 manage.py createsuperuser

    ** Start development server (if not already running): 
        $ python3 manage.py runserver
        - navigate to: 
            http://127.0.0.1:8000/admin/

    ** Make poll app modifiable in the admin
        polls/admin.py


*#*#*#*#*#*#*#*#*#*# Part 3 *#*#*#*#*#*#*#*#*#*#
** Writing more views
    - add views to polls/views.py
    - wire new views into polls.urls by adding path()'s

** Write more functional views to polls:
    - detail, results, vote

** Create 'templates' directory in polls
    - Create polls folder in templates folder
    - Create index.html
    - Modify def index in polls/view.py to display questions in bulleted list
    - Update polls/detail.html to display question as heading, and choices as bulleted list
    - Remove hardcoded URL in polls/templates/index
    - Namespace URL names


*#*#*#*#*#*#*#*#*#*# Part 4 *#*#*#*#*#*#*#*#*#*#
** Writing simple form:
    - Update “polls/detail.html” to contain <form>

    - Add code to def vote

    - Change def results to return results.html

** Generic views:
    - Convert the URLconf
    - Delete some of the old, unneeded views
    - Introduce new views based on Django’s generic views
    






